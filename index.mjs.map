{"version":3,"file":"index.mjs","sources":["../lib/ndarray.js","../lib/saxpy.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport f32 from '@stdlib/number-float64-base-to-float32';\n\n\n// VARIABLES //\n\nvar M = 4;\n\n\n// MAIN //\n\n/**\n* Multiplies a vector `x` by a constant and adds the result to `y`.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} alpha - scalar\n* @param {Float32Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting index for `x`\n* @param {Float32Array} y - output array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting index for `y`\n* @returns {Float32Array} output array\n*\n* @example\n* import Float32Array from '@stdlib/array-float32';\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float32Array( [ 1.0, 1.0, 1.0, 1.0, 1.0 ] );\n* var alpha = 5.0;\n*\n* saxpy( x.length, alpha, x, 1, 0, y, 1, 0 );\n* // y => <Float32Array>[ 6.0, 11.0, 16.0, 21.0, 26.0 ]\n*/\nfunction saxpy( N, alpha, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar ix;\n\tvar iy;\n\tvar m;\n\tvar i;\n\tif ( N <= 0 || alpha === 0.0 ) {\n\t\treturn y;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\n\t// Use unrolled loops if both strides are equal to `1`...\n\tif ( strideX === 1 && strideY === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\ty[ iy ] += f32( alpha * x[ ix ] );\n\t\t\t\tix += strideX;\n\t\t\t\tiy += strideY;\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn y;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\ty[ iy ] += f32( alpha * x[ ix ] );\n\t\t\ty[ iy+1 ] += f32( alpha * x[ ix+1 ] );\n\t\t\ty[ iy+2 ] += f32( alpha * x[ ix+2 ] );\n\t\t\ty[ iy+3 ] += f32( alpha * x[ ix+3 ] );\n\t\t\tix += M;\n\t\t\tiy += M;\n\t\t}\n\t\treturn y;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] += f32( alpha * x[ ix ] );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default saxpy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Multiplies a vector `x` by a constant and adds the result to `y`.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} alpha - scalar\n* @param {Float32Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Float32Array} y - output array\n* @param {integer} strideY - `y` stride length\n* @returns {Float32Array} output array\n*\n* @example\n* import Float32Array from '@stdlib/array-float32';\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float32Array( [ 1.0, 1.0, 1.0, 1.0, 1.0 ] );\n* var alpha = 5.0;\n*\n* saxpy( x.length, alpha, x, 1, y, 1 );\n* // y => <Float32Array>[ 6.0, 11.0, 16.0, 21.0, 26.0 ]\n*/\nfunction saxpy( N, alpha, x, strideX, y, strideY ) {\n\tvar ix;\n\tvar iy;\n\tif ( N <= 0 || alpha === 0.0 ) {\n\t\treturn y;\n\t}\n\tix = stride2offset( N, strideX );\n\tiy = stride2offset( N, strideY );\n\treturn ndarray( N, alpha, x, strideX, ix, y, strideY, iy );\n}\n\n\n// EXPORTS //\n\nexport default saxpy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport saxpy from './saxpy.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( saxpy, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default saxpy;\n"],"names":["M","saxpy","N","alpha","x","strideX","offsetX","y","strideY","offsetY","ix","iy","m","i","f32","ndarray","stride2offset","setReadOnly"],"mappings":";;sUA2BA,IAAIA,EAAI,EA4BR,SAASC,EAAOC,EAAGC,EAAOC,EAAGC,EAASC,EAASC,EAAGC,EAASC,GAC1D,IAAIC,EACAC,EACAC,EACAC,EACJ,GAAKX,GAAK,GAAe,IAAVC,EACd,OAAOI,EAMR,GAJAG,EAAKJ,EACLK,EAAKF,EAGY,IAAZJ,GAA6B,IAAZG,EAAgB,CAIrC,IAHAI,EAAIV,EAAIF,GAGC,EACR,IAAMa,EAAI,EAAGA,EAAID,EAAGC,IACnBN,EAAGI,IAAQG,EAAKX,EAAQC,EAAGM,IAC3BA,GAAML,EACNM,GAAMH,EAGR,GAAKN,EAAIF,EACR,OAAOO,EAER,IAAMM,EAAID,EAAGC,EAAIX,EAAGW,GAAKb,EACxBO,EAAGI,IAAQG,EAAKX,EAAQC,EAAGM,IAC3BH,EAAGI,EAAG,IAAOG,EAAKX,EAAQC,EAAGM,EAAG,IAChCH,EAAGI,EAAG,IAAOG,EAAKX,EAAQC,EAAGM,EAAG,IAChCH,EAAGI,EAAG,IAAOG,EAAKX,EAAQC,EAAGM,EAAG,IAChCA,GAAMV,EACNW,GAAMX,EAEP,OAAOO,CACP,CACD,IAAMM,EAAI,EAAGA,EAAIX,EAAGW,IACnBN,EAAGI,IAAQG,EAAKX,EAAQC,EAAGM,IAC3BA,GAAML,EACNM,GAAMH,EAEP,OAAOD,CACR,CChDA,SAASN,EAAOC,EAAGC,EAAOC,EAAGC,EAASE,EAAGC,GAGxC,OAAKN,GAAK,GAAe,IAAVC,EACPI,EAIDQ,EAASb,EAAGC,EAAOC,EAAGC,EAFxBW,EAAed,EAAGG,GAEmBE,EAAGC,EADxCQ,EAAed,EAAGM,GAExB,CC7BAS,EAAAhB,EAAA,UAAAc"}